# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: subscriber.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import field_mask_pb2 as google_dot_protobuf_dot_field__mask__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='subscriber.proto',
  package='osmocom',
  syntax='proto3',
  serialized_pb=_b('\n\x10subscriber.proto\x12\x07osmocom\x1a google/protobuf/field_mask.proto\"\x06\n\x04Void\"Z\n\x0cSubscriberID\x12\n\n\x02id\x18\x01 \x01(\t\x12*\n\x04type\x18\x02 \x01(\x0e\x32\x1c.osmocom.SubscriberID.IDType\"\x12\n\x06IDType\x12\x08\n\x04IMSI\x10\x00\"6\n\x0fSubscriberIDSet\x12#\n\x04sids\x18\x01 \x03(\x0b\x32\x15.osmocom.SubscriberID\"\x8d\x02\n\x0fGSMSubscription\x12<\n\x05state\x18\x01 \x01(\x0e\x32-.osmocom.GSMSubscription.GSMSubscriptionState\x12\x37\n\tauth_algo\x18\x02 \x01(\x0e\x32$.osmocom.GSMSubscription.GSMAuthAlgo\x12\x10\n\x08\x61uth_key\x18\x03 \x01(\x0c\x12\x13\n\x0b\x61uth_tuples\x18\x04 \x03(\x0c\"0\n\x14GSMSubscriptionState\x12\x0c\n\x08INACTIVE\x10\x00\x12\n\n\x06\x41\x43TIVE\x10\x01\"*\n\x0bGSMAuthAlgo\x12\x1b\n\x17PRECOMPUTED_AUTH_TUPLES\x10\x00\"\x11\n\x0fSubscriberState\"\x84\x01\n\x0eSubscriberData\x12\"\n\x03sid\x18\x01 \x01(\x0b\x32\x15.osmocom.SubscriberID\x12%\n\x03gsm\x18\x02 \x01(\x0b\x32\x18.osmocom.GSMSubscription\x12\'\n\x05state\x18\x03 \x01(\x0b\x32\x18.osmocom.SubscriberState\"c\n\x10SubscriberUpdate\x12%\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x17.osmocom.SubscriberData\x12(\n\x04mask\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.FieldMask2\xca\x02\n\x0cSubscriberDB\x12\x39\n\rAddSubscriber\x12\x17.osmocom.SubscriberData\x1a\r.osmocom.Void\"\x00\x12:\n\x10\x44\x65leteSubscriber\x12\x15.osmocom.SubscriberID\x1a\r.osmocom.Void\"\x00\x12>\n\x10UpdateSubscriber\x12\x19.osmocom.SubscriberUpdate\x1a\r.osmocom.Void\"\x00\x12\x45\n\x11GetSubscriberData\x12\x15.osmocom.SubscriberID\x1a\x17.osmocom.SubscriberData\"\x00\x12<\n\x0fListSubscribers\x12\r.osmocom.Void\x1a\x18.osmocom.SubscriberIDSet\"\x00\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_field__mask__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_SUBSCRIBERID_IDTYPE = _descriptor.EnumDescriptor(
  name='IDType',
  full_name='osmocom.SubscriberID.IDType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IMSI', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=143,
  serialized_end=161,
)
_sym_db.RegisterEnumDescriptor(_SUBSCRIBERID_IDTYPE)

_GSMSUBSCRIPTION_GSMSUBSCRIPTIONSTATE = _descriptor.EnumDescriptor(
  name='GSMSubscriptionState',
  full_name='osmocom.GSMSubscription.GSMSubscriptionState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INACTIVE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=397,
  serialized_end=445,
)
_sym_db.RegisterEnumDescriptor(_GSMSUBSCRIPTION_GSMSUBSCRIPTIONSTATE)

_GSMSUBSCRIPTION_GSMAUTHALGO = _descriptor.EnumDescriptor(
  name='GSMAuthAlgo',
  full_name='osmocom.GSMSubscription.GSMAuthAlgo',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PRECOMPUTED_AUTH_TUPLES', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=447,
  serialized_end=489,
)
_sym_db.RegisterEnumDescriptor(_GSMSUBSCRIPTION_GSMAUTHALGO)


_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='osmocom.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=69,
)


_SUBSCRIBERID = _descriptor.Descriptor(
  name='SubscriberID',
  full_name='osmocom.SubscriberID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='osmocom.SubscriberID.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='osmocom.SubscriberID.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SUBSCRIBERID_IDTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=161,
)


_SUBSCRIBERIDSET = _descriptor.Descriptor(
  name='SubscriberIDSet',
  full_name='osmocom.SubscriberIDSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sids', full_name='osmocom.SubscriberIDSet.sids', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=163,
  serialized_end=217,
)


_GSMSUBSCRIPTION = _descriptor.Descriptor(
  name='GSMSubscription',
  full_name='osmocom.GSMSubscription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='osmocom.GSMSubscription.state', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='auth_algo', full_name='osmocom.GSMSubscription.auth_algo', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='auth_key', full_name='osmocom.GSMSubscription.auth_key', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='auth_tuples', full_name='osmocom.GSMSubscription.auth_tuples', index=3,
      number=4, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _GSMSUBSCRIPTION_GSMSUBSCRIPTIONSTATE,
    _GSMSUBSCRIPTION_GSMAUTHALGO,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=220,
  serialized_end=489,
)


_SUBSCRIBERSTATE = _descriptor.Descriptor(
  name='SubscriberState',
  full_name='osmocom.SubscriberState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=491,
  serialized_end=508,
)


_SUBSCRIBERDATA = _descriptor.Descriptor(
  name='SubscriberData',
  full_name='osmocom.SubscriberData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sid', full_name='osmocom.SubscriberData.sid', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gsm', full_name='osmocom.SubscriberData.gsm', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='osmocom.SubscriberData.state', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=511,
  serialized_end=643,
)


_SUBSCRIBERUPDATE = _descriptor.Descriptor(
  name='SubscriberUpdate',
  full_name='osmocom.SubscriberUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='osmocom.SubscriberUpdate.data', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mask', full_name='osmocom.SubscriberUpdate.mask', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=645,
  serialized_end=744,
)

_SUBSCRIBERID.fields_by_name['type'].enum_type = _SUBSCRIBERID_IDTYPE
_SUBSCRIBERID_IDTYPE.containing_type = _SUBSCRIBERID
_SUBSCRIBERIDSET.fields_by_name['sids'].message_type = _SUBSCRIBERID
_GSMSUBSCRIPTION.fields_by_name['state'].enum_type = _GSMSUBSCRIPTION_GSMSUBSCRIPTIONSTATE
_GSMSUBSCRIPTION.fields_by_name['auth_algo'].enum_type = _GSMSUBSCRIPTION_GSMAUTHALGO
_GSMSUBSCRIPTION_GSMSUBSCRIPTIONSTATE.containing_type = _GSMSUBSCRIPTION
_GSMSUBSCRIPTION_GSMAUTHALGO.containing_type = _GSMSUBSCRIPTION
_SUBSCRIBERDATA.fields_by_name['sid'].message_type = _SUBSCRIBERID
_SUBSCRIBERDATA.fields_by_name['gsm'].message_type = _GSMSUBSCRIPTION
_SUBSCRIBERDATA.fields_by_name['state'].message_type = _SUBSCRIBERSTATE
_SUBSCRIBERUPDATE.fields_by_name['data'].message_type = _SUBSCRIBERDATA
_SUBSCRIBERUPDATE.fields_by_name['mask'].message_type = google_dot_protobuf_dot_field__mask__pb2._FIELDMASK
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['SubscriberID'] = _SUBSCRIBERID
DESCRIPTOR.message_types_by_name['SubscriberIDSet'] = _SUBSCRIBERIDSET
DESCRIPTOR.message_types_by_name['GSMSubscription'] = _GSMSUBSCRIPTION
DESCRIPTOR.message_types_by_name['SubscriberState'] = _SUBSCRIBERSTATE
DESCRIPTOR.message_types_by_name['SubscriberData'] = _SUBSCRIBERDATA
DESCRIPTOR.message_types_by_name['SubscriberUpdate'] = _SUBSCRIBERUPDATE

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'subscriber_pb2'
  # @@protoc_insertion_point(class_scope:osmocom.Void)
  ))
_sym_db.RegisterMessage(Void)

SubscriberID = _reflection.GeneratedProtocolMessageType('SubscriberID', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIBERID,
  __module__ = 'subscriber_pb2'
  # @@protoc_insertion_point(class_scope:osmocom.SubscriberID)
  ))
_sym_db.RegisterMessage(SubscriberID)

SubscriberIDSet = _reflection.GeneratedProtocolMessageType('SubscriberIDSet', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIBERIDSET,
  __module__ = 'subscriber_pb2'
  # @@protoc_insertion_point(class_scope:osmocom.SubscriberIDSet)
  ))
_sym_db.RegisterMessage(SubscriberIDSet)

GSMSubscription = _reflection.GeneratedProtocolMessageType('GSMSubscription', (_message.Message,), dict(
  DESCRIPTOR = _GSMSUBSCRIPTION,
  __module__ = 'subscriber_pb2'
  # @@protoc_insertion_point(class_scope:osmocom.GSMSubscription)
  ))
_sym_db.RegisterMessage(GSMSubscription)

SubscriberState = _reflection.GeneratedProtocolMessageType('SubscriberState', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIBERSTATE,
  __module__ = 'subscriber_pb2'
  # @@protoc_insertion_point(class_scope:osmocom.SubscriberState)
  ))
_sym_db.RegisterMessage(SubscriberState)

SubscriberData = _reflection.GeneratedProtocolMessageType('SubscriberData', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIBERDATA,
  __module__ = 'subscriber_pb2'
  # @@protoc_insertion_point(class_scope:osmocom.SubscriberData)
  ))
_sym_db.RegisterMessage(SubscriberData)

SubscriberUpdate = _reflection.GeneratedProtocolMessageType('SubscriberUpdate', (_message.Message,), dict(
  DESCRIPTOR = _SUBSCRIBERUPDATE,
  __module__ = 'subscriber_pb2'
  # @@protoc_insertion_point(class_scope:osmocom.SubscriberUpdate)
  ))
_sym_db.RegisterMessage(SubscriberUpdate)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class SubscriberDBStub(object):
    """--------------------------------------------------------------------------
    SubscriberDB service definition.
    --------------------------------------------------------------------------
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.AddSubscriber = channel.unary_unary(
          '/osmocom.SubscriberDB/AddSubscriber',
          request_serializer=SubscriberData.SerializeToString,
          response_deserializer=Void.FromString,
          )
      self.DeleteSubscriber = channel.unary_unary(
          '/osmocom.SubscriberDB/DeleteSubscriber',
          request_serializer=SubscriberID.SerializeToString,
          response_deserializer=Void.FromString,
          )
      self.UpdateSubscriber = channel.unary_unary(
          '/osmocom.SubscriberDB/UpdateSubscriber',
          request_serializer=SubscriberUpdate.SerializeToString,
          response_deserializer=Void.FromString,
          )
      self.GetSubscriberData = channel.unary_unary(
          '/osmocom.SubscriberDB/GetSubscriberData',
          request_serializer=SubscriberID.SerializeToString,
          response_deserializer=SubscriberData.FromString,
          )
      self.ListSubscribers = channel.unary_unary(
          '/osmocom.SubscriberDB/ListSubscribers',
          request_serializer=Void.SerializeToString,
          response_deserializer=SubscriberIDSet.FromString,
          )


  class SubscriberDBServicer(object):
    """--------------------------------------------------------------------------
    SubscriberDB service definition.
    --------------------------------------------------------------------------
    """

    def AddSubscriber(self, request, context):
      """Adds a new subscriber to the store.
      Throws ALREADY_EXISTS if the subscriber already exists.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteSubscriber(self, request, context):
      """Deletes an existing subscriber.
      If the subscriber is not already present, this request is ignored.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateSubscriber(self, request, context):
      """Updates an existing subscriber.
      Throws NOT_FOUND if the subscriber is missing.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetSubscriberData(self, request, context):
      """Returns the SubscriberData for a subscriber.
      Throws NOT_FOUND if the subscriber is missing.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListSubscribers(self, request, context):
      """List the subscribers in the store.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SubscriberDBServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'AddSubscriber': grpc.unary_unary_rpc_method_handler(
            servicer.AddSubscriber,
            request_deserializer=SubscriberData.FromString,
            response_serializer=Void.SerializeToString,
        ),
        'DeleteSubscriber': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteSubscriber,
            request_deserializer=SubscriberID.FromString,
            response_serializer=Void.SerializeToString,
        ),
        'UpdateSubscriber': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateSubscriber,
            request_deserializer=SubscriberUpdate.FromString,
            response_serializer=Void.SerializeToString,
        ),
        'GetSubscriberData': grpc.unary_unary_rpc_method_handler(
            servicer.GetSubscriberData,
            request_deserializer=SubscriberID.FromString,
            response_serializer=SubscriberData.SerializeToString,
        ),
        'ListSubscribers': grpc.unary_unary_rpc_method_handler(
            servicer.ListSubscribers,
            request_deserializer=Void.FromString,
            response_serializer=SubscriberIDSet.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'osmocom.SubscriberDB', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaSubscriberDBServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """--------------------------------------------------------------------------
    SubscriberDB service definition.
    --------------------------------------------------------------------------
    """
    def AddSubscriber(self, request, context):
      """Adds a new subscriber to the store.
      Throws ALREADY_EXISTS if the subscriber already exists.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteSubscriber(self, request, context):
      """Deletes an existing subscriber.
      If the subscriber is not already present, this request is ignored.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateSubscriber(self, request, context):
      """Updates an existing subscriber.
      Throws NOT_FOUND if the subscriber is missing.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetSubscriberData(self, request, context):
      """Returns the SubscriberData for a subscriber.
      Throws NOT_FOUND if the subscriber is missing.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListSubscribers(self, request, context):
      """List the subscribers in the store.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSubscriberDBStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """--------------------------------------------------------------------------
    SubscriberDB service definition.
    --------------------------------------------------------------------------
    """
    def AddSubscriber(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Adds a new subscriber to the store.
      Throws ALREADY_EXISTS if the subscriber already exists.

      """
      raise NotImplementedError()
    AddSubscriber.future = None
    def DeleteSubscriber(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Deletes an existing subscriber.
      If the subscriber is not already present, this request is ignored.

      """
      raise NotImplementedError()
    DeleteSubscriber.future = None
    def UpdateSubscriber(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Updates an existing subscriber.
      Throws NOT_FOUND if the subscriber is missing.

      """
      raise NotImplementedError()
    UpdateSubscriber.future = None
    def GetSubscriberData(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Returns the SubscriberData for a subscriber.
      Throws NOT_FOUND if the subscriber is missing.

      """
      raise NotImplementedError()
    GetSubscriberData.future = None
    def ListSubscribers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List the subscribers in the store.

      """
      raise NotImplementedError()
    ListSubscribers.future = None


  def beta_create_SubscriberDB_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('osmocom.SubscriberDB', 'AddSubscriber'): SubscriberData.FromString,
      ('osmocom.SubscriberDB', 'DeleteSubscriber'): SubscriberID.FromString,
      ('osmocom.SubscriberDB', 'GetSubscriberData'): SubscriberID.FromString,
      ('osmocom.SubscriberDB', 'ListSubscribers'): Void.FromString,
      ('osmocom.SubscriberDB', 'UpdateSubscriber'): SubscriberUpdate.FromString,
    }
    response_serializers = {
      ('osmocom.SubscriberDB', 'AddSubscriber'): Void.SerializeToString,
      ('osmocom.SubscriberDB', 'DeleteSubscriber'): Void.SerializeToString,
      ('osmocom.SubscriberDB', 'GetSubscriberData'): SubscriberData.SerializeToString,
      ('osmocom.SubscriberDB', 'ListSubscribers'): SubscriberIDSet.SerializeToString,
      ('osmocom.SubscriberDB', 'UpdateSubscriber'): Void.SerializeToString,
    }
    method_implementations = {
      ('osmocom.SubscriberDB', 'AddSubscriber'): face_utilities.unary_unary_inline(servicer.AddSubscriber),
      ('osmocom.SubscriberDB', 'DeleteSubscriber'): face_utilities.unary_unary_inline(servicer.DeleteSubscriber),
      ('osmocom.SubscriberDB', 'GetSubscriberData'): face_utilities.unary_unary_inline(servicer.GetSubscriberData),
      ('osmocom.SubscriberDB', 'ListSubscribers'): face_utilities.unary_unary_inline(servicer.ListSubscribers),
      ('osmocom.SubscriberDB', 'UpdateSubscriber'): face_utilities.unary_unary_inline(servicer.UpdateSubscriber),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_SubscriberDB_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('osmocom.SubscriberDB', 'AddSubscriber'): SubscriberData.SerializeToString,
      ('osmocom.SubscriberDB', 'DeleteSubscriber'): SubscriberID.SerializeToString,
      ('osmocom.SubscriberDB', 'GetSubscriberData'): SubscriberID.SerializeToString,
      ('osmocom.SubscriberDB', 'ListSubscribers'): Void.SerializeToString,
      ('osmocom.SubscriberDB', 'UpdateSubscriber'): SubscriberUpdate.SerializeToString,
    }
    response_deserializers = {
      ('osmocom.SubscriberDB', 'AddSubscriber'): Void.FromString,
      ('osmocom.SubscriberDB', 'DeleteSubscriber'): Void.FromString,
      ('osmocom.SubscriberDB', 'GetSubscriberData'): SubscriberData.FromString,
      ('osmocom.SubscriberDB', 'ListSubscribers'): SubscriberIDSet.FromString,
      ('osmocom.SubscriberDB', 'UpdateSubscriber'): Void.FromString,
    }
    cardinalities = {
      'AddSubscriber': cardinality.Cardinality.UNARY_UNARY,
      'DeleteSubscriber': cardinality.Cardinality.UNARY_UNARY,
      'GetSubscriberData': cardinality.Cardinality.UNARY_UNARY,
      'ListSubscribers': cardinality.Cardinality.UNARY_UNARY,
      'UpdateSubscriber': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'osmocom.SubscriberDB', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
