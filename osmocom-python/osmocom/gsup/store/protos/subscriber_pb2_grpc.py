# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import subscriber_pb2 as subscriber__pb2


class SubscriberDBStub(object):
  """--------------------------------------------------------------------------
  SubscriberDB service definition.
  --------------------------------------------------------------------------
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddSubscriber = channel.unary_unary(
        '/osmocom.SubscriberDB/AddSubscriber',
        request_serializer=subscriber__pb2.SubscriberData.SerializeToString,
        response_deserializer=subscriber__pb2.Void.FromString,
        )
    self.DeleteSubscriber = channel.unary_unary(
        '/osmocom.SubscriberDB/DeleteSubscriber',
        request_serializer=subscriber__pb2.SubscriberID.SerializeToString,
        response_deserializer=subscriber__pb2.Void.FromString,
        )
    self.UpdateSubscriber = channel.unary_unary(
        '/osmocom.SubscriberDB/UpdateSubscriber',
        request_serializer=subscriber__pb2.SubscriberUpdate.SerializeToString,
        response_deserializer=subscriber__pb2.Void.FromString,
        )
    self.GetSubscriberData = channel.unary_unary(
        '/osmocom.SubscriberDB/GetSubscriberData',
        request_serializer=subscriber__pb2.SubscriberID.SerializeToString,
        response_deserializer=subscriber__pb2.SubscriberData.FromString,
        )
    self.ListSubscribers = channel.unary_unary(
        '/osmocom.SubscriberDB/ListSubscribers',
        request_serializer=subscriber__pb2.Void.SerializeToString,
        response_deserializer=subscriber__pb2.SubscriberIDSet.FromString,
        )


class SubscriberDBServicer(object):
  """--------------------------------------------------------------------------
  SubscriberDB service definition.
  --------------------------------------------------------------------------
  """

  def AddSubscriber(self, request, context):
    """Adds a new subscriber to the store.
    Throws ALREADY_EXISTS if the subscriber already exists.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteSubscriber(self, request, context):
    """Deletes an existing subscriber.
    If the subscriber is not already present, this request is ignored.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateSubscriber(self, request, context):
    """Updates an existing subscriber.
    Throws NOT_FOUND if the subscriber is missing.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSubscriberData(self, request, context):
    """Returns the SubscriberData for a subscriber.
    Throws NOT_FOUND if the subscriber is missing.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListSubscribers(self, request, context):
    """List the subscribers in the store.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SubscriberDBServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddSubscriber': grpc.unary_unary_rpc_method_handler(
          servicer.AddSubscriber,
          request_deserializer=subscriber__pb2.SubscriberData.FromString,
          response_serializer=subscriber__pb2.Void.SerializeToString,
      ),
      'DeleteSubscriber': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteSubscriber,
          request_deserializer=subscriber__pb2.SubscriberID.FromString,
          response_serializer=subscriber__pb2.Void.SerializeToString,
      ),
      'UpdateSubscriber': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateSubscriber,
          request_deserializer=subscriber__pb2.SubscriberUpdate.FromString,
          response_serializer=subscriber__pb2.Void.SerializeToString,
      ),
      'GetSubscriberData': grpc.unary_unary_rpc_method_handler(
          servicer.GetSubscriberData,
          request_deserializer=subscriber__pb2.SubscriberID.FromString,
          response_serializer=subscriber__pb2.SubscriberData.SerializeToString,
      ),
      'ListSubscribers': grpc.unary_unary_rpc_method_handler(
          servicer.ListSubscribers,
          request_deserializer=subscriber__pb2.Void.FromString,
          response_serializer=subscriber__pb2.SubscriberIDSet.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'osmocom.SubscriberDB', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
